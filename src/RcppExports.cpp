// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// computeGPP
Rcpp::NumericVector computeGPP(const Rcpp::NumericVector& light, const Rcpp::NumericVector& lP1, const Rcpp::NumericVector& lP2);
RcppExport SEXP _NSmetabolism_computeGPP(SEXP lightSEXP, SEXP lP1SEXP, SEXP lP2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type light(lightSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type lP1(lP1SEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type lP2(lP2SEXP);
    rcpp_result_gen = Rcpp::wrap(computeGPP(light, lP1, lP2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NSmetabolism_computeGPP", (DL_FUNC) &_NSmetabolism_computeGPP, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_NSmetabolism(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
